{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-06T14:41:15.736Z",
    "end": "2024-11-06T14:42:22.440Z",
    "duration": 66704,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "93373ae2-a170-4846-ab0b-0e4bb1a9d718",
      "title": "",
      "fullFile": "F:\\SDET\\API_Automation_Mocha_Axios\\tests\\Api.test.js",
      "file": "\\tests\\Api.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
          "title": "Dmoney API Automation",
          "fullFile": "F:\\SDET\\API_Automation_Mocha_Axios\\tests\\Api.test.js",
          "file": "\\tests\\Api.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Dmoney API Automation\"",
              "fullTitle": "Dmoney API Automation \"after each\" hook in \"Dmoney API Automation\"",
              "timedOut": false,
              "duration": 1002,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise(resolve => setTimeout(resolve, 1000));",
              "err": {},
              "uuid": "18192232-cf62-4e80-a0eb-d76bb31027ea",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Dmoney API Automation\"",
              "fullTitle": "Dmoney API Automation \"after each\" hook in \"Dmoney API Automation\"",
              "timedOut": false,
              "duration": 1012,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise(resolve => setTimeout(resolve, 1000));",
              "err": {},
              "uuid": "f446132d-8e2b-4d79-9245-fe8073af550c",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Dmoney API Automation\"",
              "fullTitle": "Dmoney API Automation \"after each\" hook in \"Dmoney API Automation\"",
              "timedOut": false,
              "duration": 1016,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise(resolve => setTimeout(resolve, 1000));",
              "err": {},
              "uuid": "a074f60f-a5de-4bd3-9680-847df07a35e5",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Dmoney API Automation\"",
              "fullTitle": "Dmoney API Automation \"after each\" hook in \"Dmoney API Automation\"",
              "timedOut": false,
              "duration": 1014,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise(resolve => setTimeout(resolve, 1000));",
              "err": {},
              "uuid": "57df2105-107e-4c73-95ca-adcc8f7a0179",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Dmoney API Automation\"",
              "fullTitle": "Dmoney API Automation \"after each\" hook in \"Dmoney API Automation\"",
              "timedOut": false,
              "duration": 1014,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise(resolve => setTimeout(resolve, 1000));",
              "err": {},
              "uuid": "8bcbcc6c-b829-4d3b-a2de-8e0ac4eb06b6",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Dmoney API Automation\"",
              "fullTitle": "Dmoney API Automation \"after each\" hook in \"Dmoney API Automation\"",
              "timedOut": false,
              "duration": 1014,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise(resolve => setTimeout(resolve, 1000));",
              "err": {},
              "uuid": "a1fedd0f-5547-4bd8-a0ec-3410edf05ff1",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Dmoney API Automation\"",
              "fullTitle": "Dmoney API Automation \"after each\" hook in \"Dmoney API Automation\"",
              "timedOut": false,
              "duration": 1011,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise(resolve => setTimeout(resolve, 1000));",
              "err": {},
              "uuid": "5cea2dac-852c-409a-b563-7fdf65a17cd8",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Dmoney API Automation\"",
              "fullTitle": "Dmoney API Automation \"after each\" hook in \"Dmoney API Automation\"",
              "timedOut": false,
              "duration": 1009,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise(resolve => setTimeout(resolve, 1000));",
              "err": {},
              "uuid": "4d5dcac8-100c-4369-b427-387c015575d0",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "1. Admin login",
              "fullTitle": "Dmoney API Automation 1. Admin login",
              "timedOut": false,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {data} = await axios.post(`${process.env.base_url}/user/login`, {\n    \"email\": \"admin@roadtocareer.net\",\n    \"password\": \"1234\",\n},\n    {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n// Log the response data to verify the output\nconsole.log(data);\nexpect(data.message).to.contains(\"Login successful\");\n//storeToken('token', data.token);\ntoken = data.token;",
              "err": {},
              "uuid": "c31083de-30c2-406b-9eed-36cd340e3363",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2. Create 2 customers and 1 agent",
              "fullTitle": "Dmoney API Automation 2. Create 2 customers and 1 agent",
              "timedOut": false,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const roles = ['Customer', 'Customer', 'Agent'];\n\nfor (const role of roles) {\n    const { data } = await axios.post(`${process.env.base_url}/user/create`, {\n        name: `Axios user ${faker.person.firstName()}`,\n        email: faker.internet.email(),\n        password: \"1234\",\n        phone_number: `01502${generateRandomId(100000, 999999)}`,\n        nid: generateRandomId(100000000, 999999999).toString(),\n        role: role\n    }, {\n        headers: {\n            'Content-Type': 'application/json',\n            \"Authorization\": `Bearer ${token}`,\n            \"X-AUTH-SECRET-KEY\": process.env.secretKey\n        }\n    });\n    \n    jsonData.push(data.user);\n    fs.writeFileSync('./userData.json', JSON.stringify(jsonData, null, 2));\n}",
              "err": {},
              "uuid": "53a84e12-2cea-4f1f-ab37-20514de8e18c",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "3. Give 2000 tk from System to agent",
              "fullTitle": "Dmoney API Automation 3. Give 2000 tk from System to agent",
              "timedOut": false,
              "duration": 1373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const agentPhoneNumber = jsonData[2]?.phone_number;\n\nconst response = await axios.post(`${process.env.base_url}/transaction/deposit`, {\n    from_account: \"SYSTEM\",\n    to_account: agentPhoneNumber,\n    amount: 2000\n}, {\n    headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${token}`,\n        \"X-AUTH-SECRET-KEY\": process.env.secretKey\n    }\n});\nexpect(response.status).to.equal(201);",
              "err": {},
              "uuid": "1d9cb3d1-12dc-436b-b677-89c1ee61ebdc",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "4. Deposit 1500 tk from agent to a customer",
              "fullTitle": "Dmoney API Automation 4. Deposit 1500 tk from agent to a customer",
              "timedOut": false,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const agentPhoneNumber = jsonData[2]?.phone_number;\nconst customerPhoneNumber = jsonData[0]?.phone_number;\n\nconst response = await axios.post(`${process.env.base_url}/transaction/deposit`, {\n    from_account: agentPhoneNumber,\n    to_account: customerPhoneNumber,\n    amount: 1500\n}, {\n    headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${token}`,\n        \"X-AUTH-SECRET-KEY\": process.env.secretKey\n    }\n});\nexpect(response.status).to.equal(201);",
              "err": {},
              "uuid": "43ee8339-24e4-44b2-aa0e-e37ee7f0062e",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "5. Withdraw 500 tk by customer to agent",
              "fullTitle": "Dmoney API Automation 5. Withdraw 500 tk by customer to agent",
              "timedOut": false,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const customerPhoneNumber = jsonData[0]?.phone_number;\nconst agentPhoneNumber = jsonData[2]?.phone_number;\n\nconst response = await axios.post(`${process.env.base_url}/transaction/withdraw`, {\n    from_account: customerPhoneNumber,\n    to_account: agentPhoneNumber,\n    amount: 500\n}, {\n    headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${token}`,\n        \"X-AUTH-SECRET-KEY\": process.env.secretKey\n    }\n});\nexpect(response.status).to.equal(201);",
              "err": {},
              "uuid": "8abfd14b-ff93-43d0-a521-aadc58fa5756",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6. Send 500 tk from one customer to another",
              "fullTitle": "Dmoney API Automation 6. Send 500 tk from one customer to another",
              "timedOut": false,
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const customer1PhoneNumber = jsonData[0]?.phone_number;\nconst customer2PhoneNumber = jsonData[1]?.phone_number;\n\nconst response = await axios.post(`${process.env.base_url}/transaction/sendmoney`, {\n    from_account: customer1PhoneNumber,\n    to_account: customer2PhoneNumber,\n    amount: 500\n}, {\n    headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${token}`,\n        \"X-AUTH-SECRET-KEY\": process.env.secretKey\n    }\n});\nexpect(response.status).to.equal(201);",
              "err": {},
              "uuid": "12cd5ebc-12ea-4384-aa73-9efc5f69d14b",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "7. Payment of 100 tk to a merchant by recipient customer",
              "fullTitle": "Dmoney API Automation 7. Payment of 100 tk to a merchant by recipient customer",
              "timedOut": false,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const customerPhoneNumber = jsonData[1]?.phone_number;\n\nconst response = await axios.post(`${process.env.base_url}/transaction/payment`, {\n    from_account: customerPhoneNumber,\n    to_account: \"01301474846\",\n    amount: 100\n}, {\n    headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${token}`,\n        \"X-AUTH-SECRET-KEY\": process.env.secretKey\n    }\n});\nexpect(response.status).to.equal(201);",
              "err": {},
              "uuid": "ae582131-89c0-439d-b876-a2eed2f9c255",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "8. Check balance of the recipient customer",
              "fullTitle": "Dmoney API Automation 8. Check balance of the recipient customer",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const customerPhoneNumber = jsonData[1]?.phone_number;\n\nconst response = await axios.get(`${process.env.base_url}/transaction/balance/${customerPhoneNumber}`, {\n    headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${token}`,\n        \"X-AUTH-SECRET-KEY\": process.env.secretKey\n    }\n});\nexpect(response.status).to.equal(200);\nconsole.log(`Balance of recipient customer: ${response.data.balance}`);",
              "err": {},
              "uuid": "500899fb-f4b3-4227-91cc-6ffe39e3f0ee",
              "parentUUID": "0820b31b-7f32-4962-a0d3-4f12bb4f741a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c31083de-30c2-406b-9eed-36cd340e3363",
            "53a84e12-2cea-4f1f-ab37-20514de8e18c",
            "1d9cb3d1-12dc-436b-b677-89c1ee61ebdc",
            "43ee8339-24e4-44b2-aa0e-e37ee7f0062e",
            "8abfd14b-ff93-43d0-a521-aadc58fa5756",
            "12cd5ebc-12ea-4384-aa73-9efc5f69d14b",
            "ae582131-89c0-439d-b876-a2eed2f9c255",
            "500899fb-f4b3-4227-91cc-6ffe39e3f0ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2055,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}